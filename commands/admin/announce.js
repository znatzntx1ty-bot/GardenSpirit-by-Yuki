const { 
  SlashCommandBuilder, 
  EmbedBuilder, 
  PermissionFlagsBits, 
  ActionRowBuilder, 
  ButtonBuilder, 
  ButtonStyle 
} = require("discord.js");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("announce")
    .setDescription("üì¢ ‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏±‡πâ‡∏ô‡πÇ‡∏õ‡∏£ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå / ‡∏£‡∏π‡∏õ / ‡∏™‡∏µ / ‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü")
    .addChannelOption(option =>
      option.setName("channel")
        .setDescription("‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®")
        .setRequired(true)
    )
    .addStringOption(option =>
      option.setName("‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠")
        .setDescription("‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®")
        .setRequired(true)
    )
    .addStringOption(option =>
      option.setName("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
        .setDescription("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏´‡∏•‡∏±‡∏Å")
        .setRequired(true)
    )
    .addStringOption(option =>
      option.setName("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏™‡∏£‡∏¥‡∏°")
        .setDescription("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô field ‡πÅ‡∏¢‡∏Å")
        .setRequired(false)
    )
    .addStringOption(option =>
      option.setName("‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏õ‡∏∏‡πà‡∏°")
        .setDescription("‡πÉ‡∏™‡πà URL ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° (https://...)")
        .setRequired(false)
    )
    .addStringOption(option =>
      option.setName("‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏°")
        .setDescription("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏õ‡∏∏‡πà‡∏° ‡πÄ‡∏ä‡πà‡∏ô ‡∏î‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° / Join Now")
        .setRequired(false)
    )
    .addStringOption(option =>
      option.setName("‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠gif")
        .setDescription("‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠ GIF (https://...)")
        .setRequired(false)
    )
    .addStringOption(option =>
      option.setName("‡∏™‡∏µ")
        .setDescription("‡∏™‡∏µ Embed (Red, Blue, #ff66cc)")
        .setRequired(false)
    )
    .addBooleanOption(option =>
      option.setName("‡πÉ‡∏™‡πà‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏´‡∏°")
        .setDescription("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÉ‡∏™‡πà‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏´‡∏°")
        .setRequired(false)
    )
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages),

  async execute(interaction) {
    const channel = interaction.options.getChannel("channel");
    const title = interaction.options.getString("‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠");
    const content = interaction.options.getString("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°");
    const details = interaction.options.getString("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏™‡∏£‡∏¥‡∏°");
    const imageUrl = interaction.options.getString("‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠gif");
    const colorInput = interaction.options.getString("‡∏™‡∏µ") || "#f7c6ff";
    const showThumbnail = interaction.options.getBoolean("‡πÉ‡∏™‡πà‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏´‡∏°");
    const buttonUrl = interaction.options.getString("‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏õ‡∏∏‡πà‡∏°");
    const buttonLabel = interaction.options.getString("‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏°") || "üîó ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î";

    const embed = new EmbedBuilder()
      .setColor(colorInput)
      .setTitle(`üå∏ ${title}`)
      .setDescription(content)
      .setFooter({
        text: `‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÇ‡∏î‡∏¢ ${interaction.user.username}`,
        iconURL: interaction.user.displayAvatarURL(),
      })
      .setTimestamp();

    if (details) {
      embed.addFields({ name: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°", value: details });
    }

    if (imageUrl) embed.setImage(imageUrl);
    if (showThumbnail) embed.setThumbnail(interaction.guild.iconURL({ dynamic: true }));

    const components = [];
    if (buttonUrl) {
      const button = new ButtonBuilder()
        .setLabel(buttonLabel)
        .setURL(buttonUrl)
        .setStyle(ButtonStyle.Link);
      components.push(new ActionRowBuilder().addComponents(button));
    }

    await channel.send({ embeds: [embed], components });
    await interaction.reply({ content: `‚úÖ ‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà ${channel}`, ephemeral: true });
  },
};
