const { SlashCommandBuilder, PermissionFlagsBits } = require("discord.js");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("deletechannel")
    .setDescription("üóëÔ∏è ‡∏•‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
    .addStringOption(option =>
      option
        .setName("channels")
        .setDescription("‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö (‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô general chat1 chat2)")
        .setRequired(true)
    )
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageChannels),

  async execute(interaction) {
    const input = interaction.options.getString("channels");
    const channelNames = input.split(/\s+/).map(n => n.trim()).filter(Boolean);

    const deleted = [];
    const notFound = [];
    const failed = [];

    await interaction.deferReply({ ephemeral: true });

    for (const name of channelNames) {
      const ch = interaction.guild.channels.cache.find(c => c.name === name);

      if (!ch) {
        notFound.push(name);
        continue;
      }

      if (ch.type === 4) { // Category
        failed.push(`${name} (‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà)`);
        continue;
      }

      try {
        await ch.delete(`Deleted by ${interaction.user.tag}`);
        deleted.push(name);
      } catch (err) {
        console.error(`‚ùå ‡∏•‡∏ö ${name} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:`, err);
        failed.push(`${name} (${err.message})`);
      }
    }

    let result = "";
    if (deleted.length) result += `‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${deleted.join(", ")}\n`;
    if (notFound.length) result += `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á: ${notFound.join(", ")}\n`;
    if (failed.length) result += `‚ö†Ô∏è ‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${failed.join(", ")}\n`;

    if (!result) result = "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏î‡∏ñ‡∏π‡∏Å‡∏•‡∏ö";

    await interaction.editReply({ content: result });
  },
};
