const {
  SlashCommandBuilder,
  PermissionFlagsBits,
  ChannelType,
  StringSelectMenuBuilder,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  ComponentType,
} = require("discord.js");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("deletechannel")
    .setDescription("üóëÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageChannels),

  async execute(interaction) {
    if (!interaction.member.permissions.has(PermissionFlagsBits.ManageChannels)) {
      return interaction.reply({
        content: "‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ",
        ephemeral: true,
      });
    }

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• guild ‡πÉ‡∏´‡∏°‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡πÄ‡∏´‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ)
    const freshGuild = await interaction.client.guilds.fetch(interaction.guildId);
    const channels = await freshGuild.channels.fetch();

    // ‚úÖ ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡∏à‡∏≥‡∏Å‡∏±‡∏î 25 ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error)
    const textChannels = Array.from(channels.values())
      .filter(ch => ch.type === ChannelType.GuildText)
      .slice(0, 25)
      .map(ch => ({
        label: `#${ch.name}`,
        value: ch.id,
      }));

    if (textChannels.length === 0) {
      return interaction.reply({
        content: "üòï ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏•‡∏ö",
        ephemeral: true,
      });
    }

    const selectMenu = new StringSelectMenuBuilder()
      .setCustomId("deletechannel_select")
      .setPlaceholder("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á)")
      .addOptions(textChannels)
      .setMinValues(1)
      .setMaxValues(textChannels.length);

    const row = new ActionRowBuilder().addComponents(selectMenu);

    const replyMsg = await interaction.reply({
      content: "üßπ ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á):",
      components: [row],
      ephemeral: false,
    });

    const collector = replyMsg.createMessageComponentCollector({
      componentType: ComponentType.StringSelect,
      time: 60000,
    });

    collector.on("collect", async selectInteraction => {
      if (selectInteraction.user.id !== interaction.user.id) {
        return selectInteraction.reply({
          content: "‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏™‡∏±‡πà‡∏á‡∏•‡∏ö",
          ephemeral: true,
        });
      }

      const selectedIds = selectInteraction.values;
      const selectedChannels = selectedIds.map(id => {
        const ch = channels.get(id);
        return ch ? `#${ch.name}` : "‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö";
      });

      // ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô / ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
      const confirmBtn = new ButtonBuilder()
        .setCustomId("confirm_delete")
        .setLabel("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö")
        .setStyle(ButtonStyle.Danger);

      const cancelBtn = new ButtonBuilder()
        .setCustomId("cancel_delete")
        .setLabel("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")
        .setStyle(ButtonStyle.Secondary);

      const buttonRow = new ActionRowBuilder().addComponents(confirmBtn, cancelBtn);

      await selectInteraction.reply({
        content: `‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ?\n\n${selectedChannels.join("\n")}`,
        components: [buttonRow],
        ephemeral: false,
      });

      const buttonCollector = selectInteraction.channel.createMessageComponentCollector({
        componentType: ComponentType.Button,
        time: 20000,
      });

      buttonCollector.on("collect", async btnInteraction => {
        if (btnInteraction.user.id !== interaction.user.id)
          return btnInteraction.reply({
            content: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ",
            ephemeral: true,
          });

        if (btnInteraction.customId === "confirm_delete") {
          const deleted = [];
          const failed = [];

          for (const id of selectedIds) {
            const ch = channels.get(id);
            if (!ch) continue;
            try {
              await ch.delete(`Deleted by ${interaction.user.tag}`);
              deleted.push(`#${ch.name}`);
            } catch (err) {
              console.error(`‚ùå ‡∏•‡∏ö ${ch.name} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:`, err);
              failed.push(`#${ch.name}`);
            }
          }

          let result = "";
          if (deleted.length > 0)
            result += `‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${deleted.join(", ")}\n`;
          if (failed.length > 0)
            result += `‚ö†Ô∏è ‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${failed.join(", ")}\n`;
          if (result === "") result = "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏î‡∏ñ‡∏π‡∏Å‡∏•‡∏ö";

          await btnInteraction.update({
            content: result,
            components: [],
          });
          buttonCollector.stop();
        }

        if (btnInteraction.customId === "cancel_delete") {
          await btnInteraction.update({
            content: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß",
            components: [],
          });
          buttonCollector.stop();
        }
      });

      buttonCollector.on("end", async () => {
        try {
          await selectInteraction.editReply({
            components: [],
            content: "‚åõ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô (‡πÉ‡∏ä‡πâ /deletechannel ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á)",
          });
        } catch {}
      });
    });

    collector.on("end", async () => {
      try {
        await replyMsg.edit({
          components: [],
          content: "‚åõ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß (‡πÉ‡∏ä‡πâ /deletechannel ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á)",
        });
      } catch {}
    });
  },
};
