const {
  SlashCommandBuilder,
  PermissionFlagsBits,
  ChannelType,
  StringSelectMenuBuilder,
  ActionRowBuilder,
  ComponentType,
} = require("discord.js");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("deletechannel")
    .setDescription("üóëÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageChannels),

  async execute(interaction) {
    if (!interaction.member.permissions.has(PermissionFlagsBits.ManageChannels)) {
      return interaction.reply({
        content: "‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ",
        ephemeral: true,
      });
    }

    // üß† ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 25 ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏£‡∏Å ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ Discord ‡∏û‡∏±‡∏á
    const textChannels = interaction.guild.channels.cache
      .filter(ch => ch.type === ChannelType.GuildText)
      .first(25)
      .map(ch => ({
        label: `#${ch.name}`,
        value: ch.id,
      }));

    if (textChannels.length === 0) {
      return interaction.reply({
        content: "üòï ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏•‡∏ö",
        ephemeral: true,
      });
    }

    const selectMenu = new StringSelectMenuBuilder()
      .setCustomId("deletechannel_select")
      .setPlaceholder("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á)")
      .addOptions(textChannels)
      .setMinValues(1)
      .setMaxValues(textChannels.length);

    const row = new ActionRowBuilder().addComponents(selectMenu);

    const replyMsg = await interaction.reply({
      content: "üßπ ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á):",
      components: [row],
      ephemeral: false,
    });

    const collector = replyMsg.createMessageComponentCollector({
      componentType: ComponentType.StringSelect,
      time: 60000,
    });

    collector.on("collect", async selectInteraction => {
      if (selectInteraction.user.id !== interaction.user.id) {
        return selectInteraction.reply({
          content: "‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏™‡∏±‡πà‡∏á‡∏•‡∏ö",
          ephemeral: true,
        });
      }

      const selectedIds = selectInteraction.values;
      const deleted = [];
      const failed = [];

      await selectInteraction.deferReply({ ephemeral: false });

      for (const id of selectedIds) {
        const ch = interaction.guild.channels.cache.get(id);
        if (!ch) continue;

        try {
          await ch.delete(`Deleted by ${interaction.user.tag}`);
          deleted.push(`#${ch.name}`);
        } catch (err) {
          console.error(`‚ùå ‡∏•‡∏ö ${ch.name} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:`, err);
          failed.push(`#${ch.name}`);
        }
      }

      let result = "";
      if (deleted.length > 0) result += `‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${deleted.join(", ")}\n`;
      if (failed.length > 0) result += `‚ö†Ô∏è ‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${failed.join(", ")}\n`;
      if (result === "") result = "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏î‡∏ñ‡∏π‡∏Å‡∏•‡∏ö";

      await selectInteraction.editReply({
        content: result,
        components: [],
      });
    });

    collector.on("end", async () => {
      try {
        await replyMsg.edit({
          components: [],
          content: "‚åõ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß (‡πÉ‡∏ä‡πâ /deletechannel ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á)",
        });
      } catch (e) {}
    });
  },
};
