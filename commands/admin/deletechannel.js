const {
  SlashCommandBuilder,
  PermissionFlagsBits,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  ChannelType,
} = require("discord.js");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("deletechannel")
    .setDescription("üóëÔ∏è ‡∏•‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
    .addChannelOption(option =>
      option
        .setName("channel1")
        .setDescription("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏£‡∏Å")
        .setRequired(true)
    )
    .addChannelOption(option =>
      option
        .setName("channel2")
        .setDescription("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)")
        .setRequired(false)
    )
    .addChannelOption(option =>
      option
        .setName("channel3")
        .setDescription("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)")
        .setRequired(false)
    )
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageChannels),

  async execute(interaction) {
    const channels = [
      interaction.options.getChannel("channel1"),
      interaction.options.getChannel("channel2"),
      interaction.options.getChannel("channel3"),
    ].filter(Boolean);

    if (!channels.length) {
      return interaction.reply({
        content: "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö!",
        ephemeral: true,
      });
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    if (!interaction.member.permissions.has(PermissionFlagsBits.ManageChannels)) {
      return interaction.reply({
        content: "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ!",
        ephemeral: true,
      });
    }

    // ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    const row = new ActionRowBuilder().addComponents(
      new ButtonBuilder()
        .setCustomId("confirm_delete")
        .setLabel("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö")
        .setStyle(ButtonStyle.Danger),
      new ButtonBuilder()
        .setCustomId("cancel_delete")
        .setLabel("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")
        .setStyle(ButtonStyle.Secondary)
    );

    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°
    const message = await interaction.reply({
      content: `‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏∞‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°?\n${channels
        .map(ch => `‚Ä¢ <#${ch.id}>`)
        .join("\n")}`,
      components: [row],
      ephemeral: true,
    });

    // ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    const filter = i =>
      ["confirm_delete", "cancel_delete"].includes(i.customId) &&
      i.user.id === interaction.user.id;

    const collector = message.createMessageComponentCollector({
      filter,
      time: 30000,
    });

    collector.on("collect", async i => {
      if (i.customId === "confirm_delete") {
        for (const channel of channels) {
          try {
            if (channel.type === ChannelType.GuildText) {
              await channel.delete(`Deleted by ${interaction.user.tag}`);
              console.log(`üóëÔ∏è Deleted channel: ${channel.name}`);
            }
          } catch (err) {
            console.error(`‚ùå Error deleting ${channel.name}:`, err);
          }
        }

        await i.update({
          content: `‚úÖ ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!\n${channels
            .map(ch => `‚ùå ${ch.name}`)
            .join("\n")}`,
          components: [],
        });
      } else {
        await i.update({
          content: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß!",
          components: [],
        });
      }
    });

    collector.on("end", async collected => {
      if (collected.size === 0) {
        await interaction.editReply({
          content: "‚åõ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß",
          components: [],
        });
      }
    });
  },
};
