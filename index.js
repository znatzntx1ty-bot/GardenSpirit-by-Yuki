// üå∏ GardenSpirit by Yuki ‚Äî Full System V2
require("dotenv").config();
const { Client, GatewayIntentBits, Partials, Collection, Events } = require("discord.js");
const express = require("express");
const fetch = require("node-fetch");
const fs = require("fs");

const app = express();
const PORT = process.env.PORT || 3000;

// ü©∑ ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö uptime (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Render)
app.get("/", (req, res) => res.send("üåø GardenSpirit by Yuki is alive and blooming!"));
app.listen(PORT, () => console.log(`‚úÖ Web server running on port ${PORT}`));

// üå∑ Discord Client
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildMembers,
  ],
  partials: [Partials.Message, Partials.Channel, Partials.Reaction],
});

client.commands = new Collection();

// üîß ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô /commands
if (fs.existsSync("./commands")) {
  const folders = fs.readdirSync("./commands");
  for (const folder of folders) {
    const files = fs.readdirSync(`./commands/${folder}`).filter(f => f.endsWith(".js"));
    for (const file of files) {
      const cmd = require(`./commands/${folder}/${file}`);
      if (cmd.data && cmd.execute) client.commands.set(cmd.data.name, cmd);
    }
  }
}

// üåè ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢
function thaiTime() {
  return new Date().toLocaleString("th-TH", { timeZone: "Asia/Bangkok", hour12: false });
}

// üíå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ Webhook
async function sendWebhook(msg) {
  if (!process.env.WEBHOOK_URL) return;
  await fetch(process.env.WEBHOOK_URL, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ content: msg }),
  }).catch(console.error);
}

// ü™Ñ ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó
let lastNotify = 0;

client.once(Events.ClientReady, async () => {
  console.log(`‚úÖ ${client.user.tag} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!`);
  const now = Date.now();
  if (now - lastNotify > 60000) {
    await sendWebhook(`‚úÖ **${client.user.tag} ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß!** ‡πÄ‡∏ß‡∏•‡∏≤ ${thaiTime()}`);
    lastNotify = now;
  }
});

// üçÇ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó disconnect
client.on(Events.ShardDisconnect, async () => {
  const now = Date.now();
  if (now - lastNotify > 60000) {
    await sendWebhook(`‚ùå **${client.user.tag} ‡∏´‡∏•‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠!** ‡πÄ‡∏ß‡∏•‡∏≤ ${thaiTime()}`);
    lastNotify = now;
  }
});

// ‚öôÔ∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Slash Commands
client.on(Events.InteractionCreate, async interaction => {
  if (!interaction.isChatInputCommand()) return;
  const command = client.commands.get(interaction.commandName);
  if (!command) return;
  try {
    await command.execute(interaction, client);
  } catch (err) {
    console.error(err);
    if (!interaction.replied) {
      await interaction.reply({
        content: `‚ùå GardenSpirit ‡∏•‡πà‡∏°‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:\n\`\`\`${err.message}\`\`\``,
        ephemeral: true,
      });
    }
  }
});

// üßπ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πâ‡∏≤‡∏á cache (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
client.on(Events.InteractionCreate, async interaction => {
  if (!interaction.isChatInputCommand()) return;
  if (interaction.commandName !== "clearcache") return;

  if (!interaction.memberPermissions.has("Administrator"))
    return interaction.reply({ content: "üö´ ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ", ephemeral: true });

  try {
    // ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏Ñ‡∏ä‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á Discord Client
    client.guilds.cache.clear();
    client.users.cache.clear();
    client.channels.cache.clear();

    await interaction.reply("üßπ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏Ñ‡∏ä‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‚ú®");
    await sendWebhook(`üßπ ${client.user.tag} ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏Ñ‡∏ä‡πÅ‡∏•‡πâ‡∏ß! ‡πÄ‡∏ß‡∏•‡∏≤ ${thaiTime()}`);
  } catch (err) {
    await interaction.reply({ content: `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message}`, ephemeral: true });
  }
});

// üîÅ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ process ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡∏ß / error
process.on("exit", async code => {
  await sendWebhook(`‚ö†Ô∏è **${process.env.BOT_NAME || "GardenSpirit"}** ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏á (Code: ${code}) ‡πÄ‡∏ß‡∏•‡∏≤ ${thaiTime()}`);
});
process.on("uncaughtException", async err => {
  console.error("‚ùå ‡∏ö‡∏≠‡∏ó‡πÄ‡∏à‡∏≠‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
  await sendWebhook(`üí• **${process.env.BOT_NAME || "GardenSpirit"}** ‡∏•‡πà‡∏°‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:\n\`\`\`${err.message}\`\`\``);
  process.exit(1);
});

// üöÄ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö Discord
client.login(process.env.TOKEN);
